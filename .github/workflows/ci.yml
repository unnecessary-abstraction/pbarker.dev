# Copyright (c) 2023 Paul Barker <paul@pbarker.dev>
# SPDX-License-Identifier: Apache-2.0

name: Build website
on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Set up caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.local/pipx
          key: ${{ runner.os }}-cache

      - name: Install poetry
        run: pipx install poetry==1.8.2

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Install Tailwind CSS
        run: |
          wget "https://github.com/tailwindlabs/tailwindcss/releases/download/v3.4.1/tailwindcss-linux-x64" -O /usr/local/bin/tailwindcss
          chmod a+x /usr/local/bin/tailwindcss

      - name: Install minify
        run: |
          wget "https://github.com/tdewolff/minify/releases/download/v2.20.19/minify_linux_amd64.tar.gz"
          tar xf minify_linux_amd64.tar.gz minify
          mv minify /usr/local/bin/minify
          rm -f minify_linux_amd64.tar.gz

      - name: Build website with Pelican & TailwindCSS
        run: |
          poetry run python3 photography/preprocess.py
          poetry run pelican
          tailwindcss -i css/main.scss -o public/css/main.css

      - name: Minify output
        run: |
          minify -r public -o minified -s
          rm -rf public
          mv minified/public public
          rmdir minified

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: public
          path: public

  deploy:
    name: Deploy
    needs: build
    if: github.repository == 'unnecessary-abstraction/pbarker.dev'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: public
          path: public

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy public --project-name=pbarker --branch=${{ github.head_ref || github.ref_name }}
